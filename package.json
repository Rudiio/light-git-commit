{
  "name": "light-git-commits",
  "displayName": "Light git commits",
  "description": "🪶 Lightweight and extensible conventional commits for lazy perfectionnist. 🥱",
  "version": "0.1.0",
  "engines": {
    "vscode": "^1.96.0"
  },
  "categories": [
    "Other"
  ],
  "publisher": "Rudiio",
  "author": {"name": "FIDA CYRILLE Rudio Maharavo","email": "fidacyrillerudio@gmail.com"},
  "license":"MIT",
  "repository": {
		"type": "git",
		"url": "https://github.com/Rudiio/light-git-commit"
	},
  "icon": "assets/logo.png",
  "activationEvents": ["onStartupFinished"],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "light-git-commits.createCommit",
        "title": "Light commit: 🚀 Create a new light (conventional) commit."
      },
      {
        "command": "light-git-commits.addTemplate",
        "title": "Light commit: 📦 Add a new light commit template."
      },
      {
        "command": "light-git-commits.deleteTemplate",
        "title": "Light commit: 🧹 Delete an existing commit template."
      }
    ],
    "configuration": {
    "title": "LightGitCommits",
    "properties": {
        "light-git-commit.showEmoji":{"type":"boolean","default":true,"description": "Toogles the injection of emoji in the final commit message."},      
        "light-git-commit.commitTemplates": {
            "type": "array",
            "default": [
              {
                "type": "fix",
                "emoji": "🐛",
                "description": "A commit that fixes a bug in your codebase"
              },
              {
                "type": "feat",
                "emoji": "✨",
                "description": "A commit that implements a new feature"
              },
              {
                "type": "docs",
                "emoji": "📖",
                "description": "A commit that adds documentation"
              },
              {
                "type": "style",
                "emoji": "💅",
                "description": "A commit that only affects code style (white-space, formatting, missing semi-colons, etc)"
              },
              {
                "type": "refactor",
                "emoji": "📦",
                "description": "A commit that modify the code but not the action"
              },
              {
                "type": "perf",
                "emoji": "🚀",
                "description": "A commit that enhances the performance of the software"
              },
              {
                "type": "test",
                "emoji": "🧪",
                "description": "A commit that modifies or adds tests to the codebase"
              },
              {
                "type": "build",
                "emoji": "🛠️",
                "description": "A commit that touches the build system"
              },
              {
                "type": "ci",
                "emoji": "⚙️",
                "description": "A commit that affects CI files"
              },
              {
                "type": "chore",
                "emoji": "♻️",
                "description": "A commit that does not affects pure source code files"
              },
              {
                "type": "revert",
                "emoji": "🗑",
                "description": "Reverts a previous commit"
              }
            ],
            "description": "Different conventional light commits templates."
        },
        "light-git-commit.activateLabelDiscovery":{"type":"boolean","default":false,"description": "Toogles the custom label discovery on your branch name based on the label pattern."},
        "light-git-commit.labelPattern":{"type":"string","default":"branch-[0-9]+","description": "Regexp pattern to extract your label from branch name."}      
    }
}
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "extensionDependencies": ["vscode.git"],
  "devDependencies": {
    "@types/vscode": "^1.96.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@typescript-eslint/eslint-plugin": "^8.17.0",
    "@typescript-eslint/parser": "^8.17.0",
    "eslint": "^9.16.0",
    "esbuild": "^0.24.0",
    "npm-run-all": "^4.1.5",
    "typescript": "^5.7.2",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1"
  }
}
